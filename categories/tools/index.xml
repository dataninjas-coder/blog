<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Thomas Levesque&#39;s .NET Blog</title>
    <link>https://blog2.thomaslevesque.net/categories/tools/</link>
    <description>Recent content in Tools on Thomas Levesque&#39;s .NET Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Mar 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog2.thomaslevesque.net/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leveraging ReSharper annotations</title>
      <link>https://blog2.thomaslevesque.net/2015/03/13/leveraging-resharper-annotations/</link>
      <pubDate>Fri, 13 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://blog2.thomaslevesque.net/2015/03/13/leveraging-resharper-annotations/</guid>
      <description>I don’t think it’s really necessary to present ReSharper (often abbreviated R#), but in case you don’t know about it, it’s a tool made by JetBrains that performs real-time analysis of your C# or VB.NET code to warn you about possible bugs, bad practices, convention violations, etc. It also provides many useful refactorings and code generators. I’ve been using it for a few years now, and it has tremendously improved both my productivity and my coding style.</description>
    </item>
    
    <item>
      <title>Visual Studio Online &#43; Git integration with Team Explorer</title>
      <link>https://blog2.thomaslevesque.net/2014/10/12/visual-studio-online-git-integration-with-team-explorer/</link>
      <pubDate>Sun, 12 Oct 2014 00:00:00 +0000</pubDate>
      
      <guid>https://blog2.thomaslevesque.net/2014/10/12/visual-studio-online-git-integration-with-team-explorer/</guid>
      <description>I recently started using Visual Studio Online for personal projects, and I must say it’s a pretty good platform, although it would be nice to be able to host public projects as well as private ones. The thing I like the most is the integration with Visual Studio Team Explorer to manage work items and builds.
However, I noticed a little gotcha when using Git for source control : the remote for VS Online must be named origin, otherwise Team Explorer won’t detect that it’s a VS Online project, and it won’t show the “Builds” and “Work items” pages.</description>
    </item>
    
    <item>
      <title>Running a custom tool automatically when a file is modified</title>
      <link>https://blog2.thomaslevesque.net/2013/11/14/running-a-custom-tool-automatically-when-a-file-is-modified/</link>
      <pubDate>Thu, 14 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>https://blog2.thomaslevesque.net/2013/11/14/running-a-custom-tool-automatically-when-a-file-is-modified/</guid>
      <description>As far as I can remember, Visual Studio always had something called “custom tools”, also known as single-file generators. When you apply such a tool to a file in your project, it will generate something (typically code, but not necessarily) based on the content of the file. For instance, the default custom tool for resource files is called ResXFileCodeGenerator, and generates a class that provides easy access to the resources defined in the resx file.</description>
    </item>
    
  </channel>
</rss>