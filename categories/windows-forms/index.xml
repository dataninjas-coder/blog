<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows Forms on Thomas Levesque&#39;s .NET Blog</title>
    <link>https://blog2.thomaslevesque.net/categories/windows-forms/</link>
    <description>Recent content in Windows Forms on Thomas Levesque&#39;s .NET Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 06 May 2009 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog2.thomaslevesque.net/categories/windows-forms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Windows Forms] Automatically drag and drop controls (DragMove)</title>
      <link>https://blog2.thomaslevesque.net/2009/05/06/windows-forms-automatically-drag-and-drop-controls-dragmove/</link>
      <pubDate>Wed, 06 May 2009 00:00:00 +0000</pubDate>
      
      <guid>https://blog2.thomaslevesque.net/2009/05/06/windows-forms-automatically-drag-and-drop-controls-dragmove/</guid>
      <description>Here&amp;rsquo;s a piece of code I wrote a while ago, I just thought it could be useful for WinForms developers&amp;hellip; In WPF, there is a very handy method to move a window with no borders : Window.DragMove. It can be used like that :
private void Window_MouseDown(object sender, MouseButtonEventArgs e) { this.DragMove(); } When you call this method, the window is moved with the mouse until the button is released. It could hardly be simpler ;) Unfortunately, this method only exists in WPF, and a majority of developers are still working with Windows Forms.</description>
    </item>
    
  </channel>
</rss>